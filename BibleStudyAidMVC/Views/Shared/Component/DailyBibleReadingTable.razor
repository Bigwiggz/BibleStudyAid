@using BibleStudyAidMVC.ViewModels
@using BibleStudyDataAccessLibrary.Models
@using BibleStudyAidMVC.Extensions.DataAdaptors
@inject NavigationManager UriHelper
 

@if (DailyBibleReadingList != null)
{
    <p class="h3">Daily Bible Readings</p>
    <SfGrid DataSource="@DailyBibleReadingList" 
        AllowPaging="true"
        AllowSorting="true"
        AllowFiltering="true"
        AllowSelection="true"
        AllowTextWrap="true">
        @*
            Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })">
            <SfDataManager AdaptorInstance="@typeof(DailyBibleReadingDataAdaptor)" Adaptor="Adaptors.CustomAdaptor"></SfDataManager>
            <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>
        *@
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
        <GridPageSettings PageCount="10"></GridPageSettings>
        <GridColumns>
            <GridColumn Field=@nameof(DailyBibleReadingViewModel.Id) HeaderText="ID" IsPrimaryKey="true"></GridColumn>
            <GridColumn HeaderText="Lesson Learned">
                <Template>
                    @{
                        var dailyBibleReadingRecord = (context as DailyBibleReadingViewModel);
                        <div>                      
                            <a><a href="#" @onclick="@(() => Navigate(dailyBibleReadingRecord, @ControllerName, @ActionName))">@dailyBibleReadingRecord.LessonLearnedDescription</a></a>
                        </div>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field=@nameof(DailyBibleReadingViewModel.DateRead) HeaderText="Date Read"></GridColumn>
            <GridColumn Field=@nameof(DailyBibleReadingViewModel.ScriptureStartPoint) HeaderText="Starting Scripture"></GridColumn>
            <GridColumn Field=@nameof(DailyBibleReadingViewModel.ScriptureEndPoint) HeaderText="Ending Scripture"></GridColumn>
        </GridColumns>
    </SfGrid>
}

@code{
    [Parameter]
    public List<DailyBibleReadingViewModel>? DailyBibleReadingList { get; set; }

    [Parameter]
    public string ControllerName { get; set; }

    [Parameter]
    public string ActionName { get; set; }

    private void Navigate(DailyBibleReadingViewModel dailyBibleReadingRecord, string controllerName, string actionName)
    {
        UriHelper.NavigateTo($"/{controllerName}/{actionName}/{dailyBibleReadingRecord.Id}",true);
    }

    public class FilterType
    {
        public string id { get; set; }
        public string type { get; set; }
    }
}